@model LMS_DEPI.APP.ViewModels.EnrollmentViewModel

@{
    ViewBag.Title = "Create Enrollment";
}

<div class="container">
    <h2 class="mb-4">Create Enrollment</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Enrollment</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row">
                    @Html.LabelFor(model => model.CourseId, "Course", htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @if (ViewBag.CourseId != null)
                        {
                            @Html.DropDownList("CourseId", (SelectList)ViewBag.CourseId, htmlAttributes: new { @class = "form-control" })
                        }
                        else
                        {
                            <span>No courses available</span>
                        }
                        @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mt-3">
                    @Html.LabelFor(model => model.StudentId, "Student", htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @if (ViewBag.StudentId != null)
                        {
                            @Html.DropDownList("StudentId", (SelectList)ViewBag.StudentId, htmlAttributes: new { @class = "form-control" })
                        }
                        else
                        {
                            <span>No students available</span>
                        }
                        @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mt-3">
                    @Html.LabelFor(model => model.EnrolledAt, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EnrolledAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EnrolledAt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mt-3">
                    @Html.LabelFor(model => model.CompletedAt, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompletedAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompletedAt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mt-3">
                    @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mt-4">
                    <div class="col-md-10 offset-md-2">
                        <input type="submit" value="Create" class="btn btn-sm btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>